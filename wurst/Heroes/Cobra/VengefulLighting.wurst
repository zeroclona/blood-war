package VengefulLighting


import CobraConsts
import SpellIds
import Spell
import SoundUtils
import HeroEntity
import ClosureEvents
import ClosureTimers

class LightningEffect
  private lightning lgt
  private unit first
  private unit second

  construct(unit f, unit s)
    first = f
    second = s
    lgt = addLightning(LIGHTNING_FINGER_OF_DEATH, false, first.getPos3Fly(), second.getPos3Fly())
    ..setColor(Cobra.VengefulLgt.lgtcolor)
    doPeriodicallyTimed(Cobra.VengefulLgt.lgtmoveperiod, Cobra.VengefulLgt.lgtmovetime) cb ->
      lgt.move(false, first.getPos3Real(), second.getPos3Real())
      if cb.isLast()
        destroy this

  ondestroy
    lgt.destr()

public class VengefulLightning extends Spell
  static let dmg = Cobra.VengefulLgt.damage
  static let enemycount = Cobra.VengefulLgt.addenemycount
  static let enemyradius = Cobra.VengefulLgt.enemytakeradius
  let s = new SoundDefinition(Cobra.VengefulLgt.impactsound, false)
  static unit filterunit

  construct()
    super(SpellIds.vengefullightning)
    EventListener.onTargetCast(id, (source, target) -> onSpellEffect(source, target))

  function impact(unit source, unit target, real damage) // source, target, damage
    damageTarget(source, target, damage, Cobra.VengefulLgt.dmgtype)
    s.playOnPoint(target.getPos3Real(), 1)
    new LightningEffect(source, target)

  static function targetFilter() returns bool
    return stdEnemyTargetCheck(filterunit, GetFilterUnit())


  function onSpellEffect(unit source, unit target)
    print(source.getName()+" casts an Vengeful Lightning")
    let lvl = source.getAbilityLevel(id)
    let damage = dmg.run(lvl, source.getSpellPower())
    filterunit = source
    var g = CreateGroup()..enumUnitsInRange(target.getPos(), enemyradius.run(lvl), Filter(function targetFilter))..removeUnit(target)
    filterunit = null

    impact(source, target, damage)
    for int i = 0 to enemycount.run(lvl) + 1
      var maxdist = REAL_MAX
      unit nearest = null
      for unit u in g
        let distSq = target.getPos().distanceToSq(u.getPos())
        if distSq < maxdist
          nearest = u
          maxdist = distSq
      g.removeUnit(nearest)
      if nearest != null
        impact(source, nearest, damage)
      else
        break
    g.destr()


//try to change targets.addunit into 58-61 (to get out a group)


init
  new VengefulLightning()
