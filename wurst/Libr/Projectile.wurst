package Projectile
import public FxEntity

public class Projectile extends FxEntity
  // Angles
  private angle xyAngle
  private vec3 startpos

  private boolean timed = false
  private boolean ranged = false

  // Moving Speed
  private real speed = 0
  private real acc = 1.0
  private real maxDist = 0
  private real maxTime = 0

  protected real dist = 0
  protected real time = 0
  
  construct( vec3 pos, real radius, player owner, angle xyAngle, string fxpath )
    super(owner, pos, radius, xyAngle, fxpath)
    startpos = pos
    setXYAngle(xyAngle)
    sleeps = false
    gravity = 0.

  function setRanged(real maxDistance)
    this.maxDist = maxDistance*maxDistance
    ranged = true

  function setTimed(real lifespan)
    this.maxTime = lifespan
    timed = true

  function setSpeed(real speed)
    this.speed = speed
    setVel(vec3(xyAngle.cos()*speed, xyAngle.sin()*speed, 0.))

  function setAcc(real factor)
    this.acc = factor

  function getSpeed() returns real
    return speed

  function setXYAngle(angle xyA)
    this.xyAngle = xyA
    fx.setXYAngle(xyA)

  function getXYAngle() returns angle
    return xyAngle

  function setZAngle(angle zA)
    fx.setZAngle(zA)

  override function update()
    vel *= acc
    super.update()
    if not done and timed
      time += ANIMATION_PERIOD
      if time >= maxTime
        terminate()
    if not done and ranged
      if startpos.distanceToSq(pos) > maxDist
        terminate()
