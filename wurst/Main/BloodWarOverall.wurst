package BloodWarOverall
import Sounds
import FText
public let goodColor = "peach".toColor()
public let badColor = "violet".toColor()
public let playerCount = 8

public constant DAMAGE_EVENT_PRIO_START       = 0 // Abort damage at this priority
/** Spell damage*/
public constant DAMAGE_EVENT_PRIO_SPDMOD      = 1 // Apply absolute changes by addition/subtraction spell damage
public constant DAMAGE_EVENT_PRIO_MAGICARMOR  = 2 // Apply magic armor reduction
public constant DAMAGE_EVENT_PRIO_RELATIVE    = 3 // Apply relative changes (multiplication and division)
public constant DAMAGE_EVENT_PRIO_ABSOLUTE    = 4 // Apply absolute changes (addition and subtraction)
public constant DAMAGE_EVENT_PRIO_SHIELD      = 5 // Apply reduction from "shield" effects
public constant DAMAGE_EVENT_PRIO_FINAL       = 6 // Final damage (won't be changed at this stage)

public function msgError( player p, string s)
  //sound m = CreateSoundFromLabel("InterfaceError", false, false, false, 10, 10)

  if ( GetLocalPlayer() == p )
    if ( s != "" ) and ( p != null )
      ClearTextMessages()
      //DisplayTimedTextToPlayer( ForPlayer, 0.52, -1.00, 2.00, "|cffffcc00"+msg+"|r" )
      DisplayTimedTextToPlayer(p, 0., 0., 1.5, "\n\n\n\n                                                  |cffffcc00" + s + "|r\n\n\n\n\n\n\n\n\n\n\n\n")
    PlaySound(Sounds.error)
  //KillSoundWhenDone(m)
  //m = null

public function goldTextUp( string text, vec3 pos, real size )
  let xvel = 0.0355 * Cos(90. * bj_DEGTORAD)
  let yvel = 0.0355 * Sin(90. * bj_DEGTORAD)
  createFText(pos, text, (size * 0.023) / 10, 2.5, vec2(xvel, yvel), COLOR_GOLD)
